@using Panoptic.UI.Web.Areas.Ops.Models
@model Panoptic.UI.Web.Areas.Ops.Models.EnvironmentStatusModel

@{
    ViewBag.Title = Model.Name;
}

@functions {
    internal string StatusToText(ServiceStatus status)
    {
        switch (status)
        {
            case ServiceStatus.Ok:
                return "Ok";
            case ServiceStatus.Warning:
                return "Warning";
            case ServiceStatus.Error:
                return "Error";
            default:
                return "alert-info";
        }
    }

    internal string StatusToCssAlertClass(ServiceStatus status)
    {
        switch (status)
        {
            case ServiceStatus.Ok:
                return "alert-success";
            case ServiceStatus.Warning:
                return "alert-warning";
            case ServiceStatus.Error:
                return "alert-danger";
            default:
                return "Unknown";
        }
    }
}

<div class="jumbotron">
    <h1>@Html.DisplayFor(model => model.Name)</h1>
    <p class="lead">@Html.DisplayFor(model => model.Description)</p>
</div>
<div>
    <div>
        <h2>Services</h2>
        <p>
            The status of the different services.
        </p>

        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Status</th>
                    <th>Issues</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var service in Model.Services)
                {
                    <tr>
                        <td>@Html.DisplayFor(model => service.Name)</td>
                        <td class="alert @StatusToCssAlertClass(service.Status)">@StatusToText(service.Status)</td>
                        <td>@Html.DisplayFor(model => service.Notification)</td>
                    </tr>
                }
            </tbody>
        </table>
        <br />

        <h2>Machines</h2>
        <p>
            The status of the different machines.
        </p>

        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Status</th>
                    <th colspan="2">CPU</th>
                    <th colspan="3">Memory</th>
                    <th>Disks</th>
                    <th>Issues</th>
                </tr>
                <tr>
                    <th></th>
                    <th></th>
                    <th>Current</th>
                    <th>History</th>
                    <th>In use</th>
                    <th>Total</th>
                    <th>&#37; in use</th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var machine in Model.Machines)
                {
                    <tr>
                        <td>@Html.ActionLink(machine.Name, "Index", "MachineStatus", new { area = "ops", machine = machine.Name }, new { })</td>
                        <td class="alert @StatusToCssAlertClass(machine.Status)">@StatusToText(machine.Status)</td>
                        <td>@Html.DisplayFor(model => machine.CpuPercentage) &#37;</td>
                        <td>CPU history ...</td>
                        <td>@Html.DisplayFor(model => machine.MemoryInUseInGb) Gb</td>
                        <td>@Html.DisplayFor(model => machine.MemoryTotalInGb) Gb</td>
                        <td>@Html.DisplayFor(model => machine.MemoryInUsePercentage) &#37;</td>
                        <td>disks ....</td>
                        <td>@Html.DisplayFor(model => machine.Notification)</td>
                    </tr>
                }
            </tbody>
        </table>
        <br />
    </div>
</div>